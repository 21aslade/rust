error: unused `Result` that must be used
  --> $DIR/must_use-result-unit-uninhabited.rs:80:5
   |
LL |     f1();
   |     ^^^^
   |
   = note: this `Result` may be an `Err` variant, which should be handled
note: the lint level is defined here
  --> $DIR/must_use-result-unit-uninhabited.rs:4:9
   |
LL | #![deny(unused_must_use)]
   |         ^^^^^^^^^^^^^^^
help: use `let _ = ...` to ignore the resulting value
   |
LL |     let _ = f1();
   |     +++++++

error: unused `Result` that must be used
  --> $DIR/must_use-result-unit-uninhabited.rs:84:5
   |
LL |     f5();
   |     ^^^^
   |
   = note: this `Result` may be an `Err` variant, which should be handled
help: use `let _ = ...` to ignore the resulting value
   |
LL |     let _ = f5();
   |     +++++++

error: unused `Result` that must be used
  --> $DIR/must_use-result-unit-uninhabited.rs:86:5
   |
LL |     f6(S2);
   |     ^^^^^^
   |
   = note: this `Result` may be an `Err` variant, which should be handled
help: use `let _ = ...` to ignore the resulting value
   |
LL |     let _ = f6(S2);
   |     +++++++

error: unused `Result` that must be used
  --> $DIR/must_use-result-unit-uninhabited.rs:88:5
   |
LL |     S2.method();
   |     ^^^^^^^^^^^
   |
   = note: this `Result` may be an `Err` variant, which should be handled
help: use `let _ = ...` to ignore the resulting value
   |
LL |     let _ = S2.method();
   |     +++++++

error: unused `ControlFlow` that must be used
  --> $DIR/must_use-result-unit-uninhabited.rs:90:5
   |
LL |     c1();
   |     ^^^^
   |
help: use `let _ = ...` to ignore the resulting value
   |
LL |     let _ = c1();
   |     +++++++

error: aborting due to 5 previous errors

